FROM nginx:alpine

RUN apk add --no-cache certbot yarn nodejs openssl

# Create app directory
WORKDIR /home/faxtail

#upgrade certbot
RUN pip3 install --upgrade certbot acme && pip3 install certbot-dns-cloudflare
RUN mkdir -p ~/.secrets/certbot/ && echo "dns_cloudflare_api_token = -G39cE7AaXS085aj8XjQCrjbJZ4TLA2LIw-zChSI" > ~/.secrets/certbot/cloudflare.ini
RUN certbot certonly --dns-cloudflare -d "faxtail.com" -d "*.faxtail.com" --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini --email eric.semeniuc@gmail.com --agree-tos --non-interactive

# Configure Certbot to reload NGINX after success renew:
RUN echo -e '#!/bin/sh\nnginx -t && nginx -s reload' | tee /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
RUN chmod a+x /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh

# set up cron job for renewal
RUN echo -e '#!/bin/sh\ncertbot renew -n' | tee /etc/periodic/weekly/certbot-renew.sh
RUN chmod a+x /etc/periodic/weekly/certbot-renew.sh

#nginx setup
# config: https://www.digitalocean.com/community/tools/nginx#?0.domain=faxtail.com&0.path=%2Fhome%2Ffaxtail%2F&0.document_root=build&0.cert_type=custom&0.email=hackerhousealpha@gmail.com&0.ssl_certificate=%2Fetc%2Fletsencrypt%2Flive%2Ffaxtail.com%2Ffullchain.pem&0.ssl_certificate_key=%2Fetc%2Fletsencrypt%2Flive%2Ffaxtail.com%2Fprivkey.pem&0.php=false&0.proxy&0.proxy_path=~%20%5E%2F(graphql%7CfileUpload%7CcheckoutOrderApproved%7CpaymentCaptureCompleted%7CfaxStatusCallback)&0.proxy_pass=http:%2F%2Fmitmproxy:8080&0.fallback_html&limit_req&user=nginx&client_max_body_size=25
RUN echo 'UEsDBAoAAAAAAAm8aFAe6n/EfgcAAH4HAAAKAAAAbmdpbnguY29uZiMgR2VuZXJhdGVkIGJ5IG5naW54Y29uZmlnLmlvCiMgaHR0cHM6Ly93d3cuZGlnaXRhbG9jZWFuLmNvbS9jb21tdW5pdHkvdG9vbHMvbmdpbngjPzAuZG9tYWluPWZheHRhaWwuY29tJjAucGF0aD0lMkZob21lJTJGZmF4dGFpbCUyRiYwLmRvY3VtZW50X3Jvb3Q9YnVpbGQmMC5jZXJ0X3R5cGU9Y3VzdG9tJjAuZW1haWw9aGFja2VyaG91c2VhbHBoYUBnbWFpbC5jb20mMC5zc2xfY2VydGlmaWNhdGU9JTJGZXRjJTJGbGV0c2VuY3J5cHQlMkZsaXZlJTJGZmF4dGFpbC5jb20lMkZmdWxsY2hhaW4ucGVtJjAuc3NsX2NlcnRpZmljYXRlX2tleT0lMkZldGMlMkZsZXRzZW5jcnlwdCUyRmxpdmUlMkZmYXh0YWlsLmNvbSUyRnByaXZrZXkucGVtJjAucGhwPWZhbHNlJjAucHJveHkmMC5wcm94eV9wYXRoPX4lMjAlNUUlMkYoZ3JhcGhxbCU3Q2ZpbGVVcGxvYWQlN0NjaGVja291dE9yZGVyQXBwcm92ZWQlN0NwYXltZW50Q2FwdHVyZUNvbXBsZXRlZCU3Q2ZheFN0YXR1c0NhbGxiYWNrKSYwLnByb3h5X3Bhc3M9aHR0cDolMkYlMkZtaXRtcHJveHk6ODA4MCYwLmZhbGxiYWNrX2h0bWwmbGltaXRfcmVxJnVzZXI9bmdpbngmY2xpZW50X21heF9ib2R5X3NpemU9MjUKCnVzZXIgbmdpbng7CnBpZCAvcnVuL25naW54LnBpZDsKd29ya2VyX3Byb2Nlc3NlcyBhdXRvOwp3b3JrZXJfcmxpbWl0X25vZmlsZSA2NTUzNTsKCmV2ZW50cyB7CgltdWx0aV9hY2NlcHQgb247Cgl3b3JrZXJfY29ubmVjdGlvbnMgNjU1MzU7Cn0KCmh0dHAgewoJY2hhcnNldCB1dGYtODsKCXNlbmRmaWxlIG9uOwoJdGNwX25vcHVzaCBvbjsKCXRjcF9ub2RlbGF5IG9uOwoJc2VydmVyX3Rva2VucyBvZmY7Cglsb2dfbm90X2ZvdW5kIG9mZjsKCXR5cGVzX2hhc2hfbWF4X3NpemUgMjA0ODsKCWNsaWVudF9tYXhfYm9keV9zaXplIDI1TTsKCgkjIE1JTUUKCWluY2x1ZGUgbWltZS50eXBlczsKCWRlZmF1bHRfdHlwZSBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07CgoJIyBsb2dnaW5nCglhY2Nlc3NfbG9nIC92YXIvbG9nL25naW54L2FjY2Vzcy5sb2c7CgllcnJvcl9sb2cgL3Zhci9sb2cvbmdpbngvZXJyb3IubG9nIHdhcm47CgoJIyBsaW1pdHMKCWxpbWl0X3JlcV9sb2dfbGV2ZWwgd2FybjsKCWxpbWl0X3JlcV96b25lICRiaW5hcnlfcmVtb3RlX2FkZHIgem9uZT1sb2dpbjoxMG0gcmF0ZT0xMHIvbTsKCgkjIFNTTAoJc3NsX3Nlc3Npb25fdGltZW91dCAxZDsKCXNzbF9zZXNzaW9uX2NhY2hlIHNoYXJlZDpTU0w6MTBtOwoJc3NsX3Nlc3Npb25fdGlja2V0cyBvZmY7CgoJIyBEaWZmaWUtSGVsbG1hbiBwYXJhbWV0ZXIgZm9yIERIRSBjaXBoZXJzdWl0ZXMKCXNzbF9kaHBhcmFtIC9ldGMvbmdpbngvZGhwYXJhbS5wZW07CgoJIyBNb3ppbGxhIEludGVybWVkaWF0ZSBjb25maWd1cmF0aW9uCglzc2xfcHJvdG9jb2xzIFRMU3YxLjIgVExTdjEuMzsKCXNzbF9jaXBoZXJzIEVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2OkVDREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NjpFQ0RIRS1FQ0RTQS1BRVMyNTYtR0NNLVNIQTM4NDpFQ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODQ6RUNESEUtRUNEU0EtQ0hBQ0hBMjAtUE9MWTEzMDU6RUNESEUtUlNBLUNIQUNIQTIwLVBPTFkxMzA1OkRIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTY6REhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NDsKCgkjIE9DU1AgU3RhcGxpbmcKCXNzbF9zdGFwbGluZyBvbjsKCXNzbF9zdGFwbGluZ192ZXJpZnkgb247CglyZXNvbHZlciAxLjEuMS4xIDEuMC4wLjEgOC44LjguOCA4LjguNC40IDIwOC42Ny4yMjIuMjIyIDIwOC42Ny4yMjAuMjIwIHZhbGlkPTYwczsKCXJlc29sdmVyX3RpbWVvdXQgMnM7CgoJIyBsb2FkIGNvbmZpZ3MKCWluY2x1ZGUgL2V0Yy9uZ2lueC9jb25mLmQvKi5jb25mOwoJaW5jbHVkZSAvZXRjL25naW54L3NpdGVzLWVuYWJsZWQvKjsKfQpQSwMECgAAAAAACbxoUAAAAAAAAAAAAAAAABAAAABzaXRlcy1hdmFpbGFibGUvUEsDBAoAAAAAAAm8aFAarscTMwQAADMEAAAgAAAAc2l0ZXMtYXZhaWxhYmxlL2ZheHRhaWwuY29tLmNvbmZzZXJ2ZXIgewoJbGlzdGVuIDQ0MyBzc2wgaHR0cDI7CglsaXN0ZW4gWzo6XTo0NDMgc3NsIGh0dHAyOwoKCXNlcnZlcl9uYW1lIGZheHRhaWwuY29tOwoJcm9vdCAvaG9tZS9mYXh0YWlsL2J1aWxkOwoKCSMgU1NMCglzc2xfY2VydGlmaWNhdGUgL2V0Yy9sZXRzZW5jcnlwdC9saXZlL2ZheHRhaWwuY29tL2Z1bGxjaGFpbi5wZW07Cglzc2xfY2VydGlmaWNhdGVfa2V5IC9ldGMvbGV0c2VuY3J5cHQvbGl2ZS9mYXh0YWlsLmNvbS9wcml2a2V5LnBlbTsKCgkjIHNlY3VyaXR5CglpbmNsdWRlIG5naW54Y29uZmlnLmlvL3NlY3VyaXR5LmNvbmY7CgoJIyBpbmRleC5odG1sIGZhbGxiYWNrCglsb2NhdGlvbiAvIHsKCQl0cnlfZmlsZXMgJHVyaSAkdXJpLyAvaW5kZXguaHRtbDsKCX0KCgkjIHJldmVyc2UgcHJveHkKCWxvY2F0aW9uIH4gXi8oZ3JhcGhxbHxmaWxlVXBsb2FkfGNoZWNrb3V0T3JkZXJBcHByb3ZlZHxwYXltZW50Q2FwdHVyZUNvbXBsZXRlZHxmYXhTdGF0dXNDYWxsYmFjaykgewoJCXByb3h5X3Bhc3MgaHR0cDovL21pdG1wcm94eTo4MDgwOwoJCWluY2x1ZGUgbmdpbnhjb25maWcuaW8vcHJveHkuY29uZjsKCX0KCgkjIGFkZGl0aW9uYWwgY29uZmlnCglpbmNsdWRlIG5naW54Y29uZmlnLmlvL2dlbmVyYWwuY29uZjsKfQoKIyBzdWJkb21haW5zIHJlZGlyZWN0CnNlcnZlciB7CglsaXN0ZW4gNDQzIHNzbCBodHRwMjsKCWxpc3RlbiBbOjpdOjQ0MyBzc2wgaHR0cDI7CgoJc2VydmVyX25hbWUgKi5mYXh0YWlsLmNvbTsKCgkjIFNTTAoJc3NsX2NlcnRpZmljYXRlIC9ldGMvbGV0c2VuY3J5cHQvbGl2ZS9mYXh0YWlsLmNvbS9mdWxsY2hhaW4ucGVtOwoJc3NsX2NlcnRpZmljYXRlX2tleSAvZXRjL2xldHNlbmNyeXB0L2xpdmUvZmF4dGFpbC5jb20vcHJpdmtleS5wZW07CgoJcmV0dXJuIDMwMSBodHRwczovL2ZheHRhaWwuY29tJHJlcXVlc3RfdXJpOwp9CgojIEhUVFAgcmVkaXJlY3QKc2VydmVyIHsKCWxpc3RlbiA4MDsKCWxpc3RlbiBbOjpdOjgwOwoKCXNlcnZlcl9uYW1lIC5mYXh0YWlsLmNvbTsKCglyZXR1cm4gMzAxIGh0dHBzOi8vZmF4dGFpbC5jb20kcmVxdWVzdF91cmk7Cn0KUEsDBAoAAAAAAAm8aFAAAAAAAAAAAAAAAAAOAAAAc2l0ZXMtZW5hYmxlZC9QSwMECgAAAAAACbxoULgOITYjAAAAIwAAAB4AAABzaXRlcy1lbmFibGVkL2ZheHRhaWwuY29tLmNvbmYuLi9zaXRlcy1hdmFpbGFibGUvZmF4dGFpbC5jb20uY29uZlBLAwQKAAAAAAAJvGhQAAAAAAAAAAAAAAAADwAAAG5naW54Y29uZmlnLmlvL1BLAwQKAAAAAAAJvGhQTFFNZucBAADnAQAAHAAAAG5naW54Y29uZmlnLmlvL3NlY3VyaXR5LmNvbmYjIHNlY3VyaXR5IGhlYWRlcnMKYWRkX2hlYWRlciBYLUZyYW1lLU9wdGlvbnMgIlNBTUVPUklHSU4iIGFsd2F5czsKYWRkX2hlYWRlciBYLVhTUy1Qcm90ZWN0aW9uICIxOyBtb2RlPWJsb2NrIiBhbHdheXM7CmFkZF9oZWFkZXIgWC1Db250ZW50LVR5cGUtT3B0aW9ucyAibm9zbmlmZiIgYWx3YXlzOwphZGRfaGVhZGVyIFJlZmVycmVyLVBvbGljeSAibm8tcmVmZXJyZXItd2hlbi1kb3duZ3JhZGUiIGFsd2F5czsKYWRkX2hlYWRlciBDb250ZW50LVNlY3VyaXR5LVBvbGljeSAiZGVmYXVsdC1zcmMgJ3NlbGYnIGh0dHA6IGh0dHBzOiBkYXRhOiBibG9iOiAndW5zYWZlLWlubGluZSciIGFsd2F5czsKYWRkX2hlYWRlciBTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5ICJtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZCIgYWx3YXlzOwoKIyAuIGZpbGVzCmxvY2F0aW9uIH4gL1wuKD8hd2VsbC1rbm93bikgewoJZGVueSBhbGw7Cn0KUEsDBAoAAAAAAAm8aFCza3e5tgIAALYCAAAbAAAAbmdpbnhjb25maWcuaW8vZ2VuZXJhbC5jb25mIyBmYXZpY29uLmljbwpsb2NhdGlvbiA9IC9mYXZpY29uLmljbyB7Cglsb2dfbm90X2ZvdW5kIG9mZjsKCWFjY2Vzc19sb2cgb2ZmOwp9CgojIHJvYm90cy50eHQKbG9jYXRpb24gPSAvcm9ib3RzLnR4dCB7Cglsb2dfbm90X2ZvdW5kIG9mZjsKCWFjY2Vzc19sb2cgb2ZmOwp9CgojIGFzc2V0cywgbWVkaWEKbG9jYXRpb24gfiogXC4oPzpjc3MoXC5tYXApP3xqcyhcLm1hcCk/fGpwZT9nfHBuZ3xnaWZ8aWNvfGN1cnxoZWljfHdlYnB8dGlmZj98bXAzfG00YXxhYWN8b2dnfG1pZGk/fHdhdnxtcDR8bW92fHdlYm18bXBlP2d8YXZpfG9ndnxmbHZ8d212KSQgewoJZXhwaXJlcyA3ZDsKCWFjY2Vzc19sb2cgb2ZmOwp9CgojIHN2ZywgZm9udHMKbG9jYXRpb24gfiogXC4oPzpzdmd6P3x0dGZ8dHRjfG90Znxlb3R8d29mZjI/KSQgewoJYWRkX2hlYWRlciBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4gIioiOwoJZXhwaXJlcyA3ZDsKCWFjY2Vzc19sb2cgb2ZmOwp9CgojIGd6aXAKZ3ppcCBvbjsKZ3ppcF92YXJ5IG9uOwpnemlwX3Byb3hpZWQgYW55OwpnemlwX2NvbXBfbGV2ZWwgNjsKZ3ppcF90eXBlcyB0ZXh0L3BsYWluIHRleHQvY3NzIHRleHQveG1sIGFwcGxpY2F0aW9uL2pzb24gYXBwbGljYXRpb24vamF2YXNjcmlwdCBhcHBsaWNhdGlvbi9yc3MreG1sIGFwcGxpY2F0aW9uL2F0b20reG1sIGltYWdlL3N2Zyt4bWw7ClBLAwQKAAAAAAAJvGhQXS4TEJsBAACbAQAAGQAAAG5naW54Y29uZmlnLmlvL3Byb3h5LmNvbmZwcm94eV9odHRwX3ZlcnNpb24JMS4xOwpwcm94eV9jYWNoZV9ieXBhc3MJJGh0dHBfdXBncmFkZTsKCnByb3h5X3NldF9oZWFkZXIgVXBncmFkZQkJCSRodHRwX3VwZ3JhZGU7CnByb3h5X3NldF9oZWFkZXIgQ29ubmVjdGlvbiAJCSJ1cGdyYWRlIjsKcHJveHlfc2V0X2hlYWRlciBIb3N0CQkJCSRob3N0Owpwcm94eV9zZXRfaGVhZGVyIFgtUmVhbC1JUAkJCSRyZW1vdGVfYWRkcjsKcHJveHlfc2V0X2hlYWRlciBYLUZvcndhcmRlZC1Gb3IJJHByb3h5X2FkZF94X2ZvcndhcmRlZF9mb3I7CnByb3h5X3NldF9oZWFkZXIgWC1Gb3J3YXJkZWQtUHJvdG8JJHNjaGVtZTsKcHJveHlfc2V0X2hlYWRlciBYLUZvcndhcmRlZC1Ib3N0CSRob3N0Owpwcm94eV9zZXRfaGVhZGVyIFgtRm9yd2FyZGVkLVBvcnQJJHNlcnZlcl9wb3J0OwpQSwECHgMKAAAAAAAJvGhQHup/xH4HAAB+BwAACgAAAAAAAAAAAAAAtIEAAAAAbmdpbnguY29uZlBLAQIeAwoAAAAAAAm8aFAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAEAD9QaYHAABzaXRlcy1hdmFpbGFibGUvUEsBAh4DCgAAAAAACbxoUBquxxMzBAAAMwQAACAAAAAAAAAAAAAAALSB1AcAAHNpdGVzLWF2YWlsYWJsZS9mYXh0YWlsLmNvbS5jb25mUEsBAh4DCgAAAAAACbxoUAAAAAAAAAAAAAAAAA4AAAAAAAAAAAAQAP1BRQwAAHNpdGVzLWVuYWJsZWQvUEsBAh4DCgAAAAAACbxoULgOITYjAAAAIwAAAB4AAAAAAAAAAAAAAO2hcQwAAHNpdGVzLWVuYWJsZWQvZmF4dGFpbC5jb20uY29uZlBLAQIeAwoAAAAAAAm8aFAAAAAAAAAAAAAAAAAPAAAAAAAAAAAAEAD9QdAMAABuZ2lueGNvbmZpZy5pby9QSwECHgMKAAAAAAAJvGhQTFFNZucBAADnAQAAHAAAAAAAAAAAAAAAtIH9DAAAbmdpbnhjb25maWcuaW8vc2VjdXJpdHkuY29uZlBLAQIeAwoAAAAAAAm8aFCza3e5tgIAALYCAAAbAAAAAAAAAAAAAAC0gR4PAABuZ2lueGNvbmZpZy5pby9nZW5lcmFsLmNvbmZQSwECHgMKAAAAAAAJvGhQXS4TEJsBAACbAQAAGQAAAAAAAAAAAAAAtIENEgAAbmdpbnhjb25maWcuaW8vcHJveHkuY29uZlBLBQYAAAAACQAJAGMCAADfEwAAAAA=' | base64 -d > /etc/nginx/nginxconfig.io-faxtail.com.zip
RUN cd /etc/nginx && unzip -o nginxconfig.io-faxtail.com.zip && openssl dhparam -out /etc/nginx/dhparam.pem 2048

RUN printf '#!/bin/sh \n\
crond\n\
nginx -g "daemon off;"\n\
"$@"\n' | tee /root/entrypoint.sh && chmod +x /root/entrypoint.sh

# Get deps
COPY package.json yarn.lock ./
RUN yarn
# Bundle app source
COPY . .

# needed to generate build for nginx
RUN yarn build
# remove all other files since we only need the build folder
RUN mv build .. && rm -rf * && mv ../build .

EXPOSE 80 443
CMD ["sh", "/root/entrypoint.sh"]